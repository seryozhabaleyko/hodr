import React, { useEffect } from 'react';
import { Link } from 'react-router-dom';
import { connect } from 'react-redux';
import SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';
import { Swiper, SwiperSlide } from 'swiper/react';

import GameCard from '../../components/GameCard';
import { fetchGames } from './actions';

import './Games.scss';
import 'swiper/components/pagination/pagination.scss';

SwiperCore.use([Pagination, A11y]);

const genresList = [
    '–≠–∫—à–µ–Ω',
    '–®—É—Ç–µ—Ä—ã',
    '–†–æ–ª–µ–≤—ã–µ',
    '–°—Ç—Ä–∞—Ç–µ–≥–∏–∏',
    '–°–∏–º—É–ª—è—Ç–æ—Ä—ã',
    '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è',
    'MOBA',
    '–ê—Ä–∫–∞–¥—ã',
    '–§–∞–π—Ç–∏–Ω–≥–∏',
    '–ì–æ–Ω–∫–∏',
    '–°–ø–æ—Ä—Ç',
    'MMO',
    '–ü–∞–∑–ª—ã',
];

function Games({ fetchGames }) {
    useEffect(() => {
        fetchGames();
    }, [fetchGames]);

    return (
        <div className="container">
            <section className="games-page__new gp-new">
                <header className="gp-new__heading">
                    <h3 className="gp-new__title">–ù–æ–≤—ã–µ –∏–≥—Ä—ã</h3>
                    <Link className="gp-new__next-link" to="/games/popular">
                        <span>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ</span>
                    </Link>
                </header>
                {/* <div className="gp-new__list gp-new__grid">
                    {[...Array(6)].map((dqd, index) => (
                        <GameCard key={index} />
                    ))}
                </div> */}

                <Swiper spaceBetween={30} slidesPerView={6} pagination={{ clickable: true }}>
                    {[...Array(10)].map((el, index) => (
                        <SwiperSlide key={index}>
                            <GameCard />
                        </SwiperSlide>
                    ))}
                </Swiper>
            </section>

            <section className="games-page__genres gp-genres">
                <header className="gp-genres__heading">
                    <h3 className="gp-genres__title">–ñ–∞–Ω—Ä—ã</h3>
                </header>
                {/* <div className="gp-genres__list gp-genres__grid">
                    {genresList.map((genre, genreIndex) => (
                        <article className="gp-genres__genre gp-genre" key={genreIndex}>
                            <span role="img" aria-label="Panda">
                                üêº
                            </span>
                            <div className="gp-genre__title">{genre}</div>
                        </article>
                    ))}
                </div> */}
                <Swiper spaceBetween={30} slidesPerView={6}>
                    {genresList.map((genre, genreIndex) => (
                        <SwiperSlide key={genreIndex}>
                            <article className="gp-genres__genre gp-genre">
                                <span role="img" aria-label="Panda">
                                    üêº
                                </span>
                                <div className="gp-genre__title">{genre}</div>
                            </article>
                        </SwiperSlide>
                    ))}
                </Swiper>
            </section>

            <section className="games-page__popular gp-popular">
                <header className="gp-popular__heading">
                    <h3 className="gp-popular__title">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–≥—Ä—ã</h3>
                    <Link className="gp-new__next-link" to="/games/popular">
                        <span>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ</span>
                    </Link>
                </header>
                {/* <div className="gp-popular__list gp-popular__grid">
                    {[...Array(6)].map((dqd, index) => (
                        <GameCard key={index} />
                    ))}
                </div> */}
                <Swiper spaceBetween={30} slidesPerView={6}>
                    {[...Array(10)].map((el, index) => (
                        <SwiperSlide key={index}>
                            <GameCard />
                        </SwiperSlide>
                    ))}
                </Swiper>
            </section>
        </div>
    );
}

const mapDispatchToProps = {
    fetchGames,
};

export default connect(null, mapDispatchToProps)(Games);
